// VARIABLES

$type-xs:   12 !default;
$type-s:    16 !default;
$type-m:    18 !default;
$type-ml:   20 !default;
$type-l:    24 !default;
$type-xl:   30 !default;
$type-xxl:  40 !default;
$type-xxxl: 54 !default;

$type-sans:  sans-serif !default;
$type-serif: serif !default;
$type-mono:  monospace !default;

$color-base: #444 !default;
$color-highlight: #1dabed !default;
$color-bg: #FFF !default;

// Tints & Shades Scale (requires the following functions:)
@function tint($color, $percent) { @return mix(#fff, $color, $percent); }
@function shade($color, $percent) { @return mix(#000, $color, $percent); }

$color-base-dark: shade($color-base,37.5%) !default;
$color-base-ish:   tint($color-base,25%) !default;
$color-base-mid:   tint($color-base,50%) !default;
$color-base-light: tint($color-base,75%) !default;
$color-base-ghost: tint($color-base,95%) !default;

$color-highlight-dark: shade($color-highlight,37.5%) !default;
$color-highlight-ish:   tint($color-highlight,25%) !default;
$color-highlight-mid:   tint($color-highlight,50%) !default;
$color-highlight-light: tint($color-highlight,75%) !default;
$color-highlight-ghost: tint($color-highlight,95%) !default;

// Opacity Scale
$color-base-ish-o:   rgba($color-base,0.75) !default;
$color-base-mid-o:   rgba($color-base,0.5) !default;
$color-base-light-o: rgba($color-base,0.25) !default;
$color-base-ghost-o: rgba($color-base,0.05) !default;

$color-highlight-ish-o:   rgba($color-highlight,0.75) !default;
$color-highlight-mid-o:   rgba($color-highlight,0.5) !default;
$color-highlight-light-o: rgba($color-highlight,0.25) !default;
$color-highlight-ghost-o: rgba($color-highlight,0.05) !default;

$space-xs: 0.375rem !default;
$space-s:  0.75rem !default;
$space-m:  1.5rem !default;
$space-l:  3rem !default;
$space-xl: 4.5rem !default;

$grid-1-6: percentage(1/6) !default;
$grid-1-4: percentage(1/4) !default;
$grid-1-3: percentage(1/3) !default;
$grid-1-2: percentage(1/2) !default;
$grid-2-3: percentage(2/3) !default;
$grid-3-4: percentage(3/4) !default;

$border: 0.0625rem solid !default;
$border-big: 0.1875rem solid !default;

// MIXINS

// Breakpoints modeled after common screen sizes
@mixin bp($point) {
	@if      $point == xs  { @media (min-width: 1em) and (max-width: 46em) { @content; } }
	@else if $point == s   { @media (min-width: 47em)  { @content; } }
	@else if $point == m   { @media (min-width: 63em)  { @content; } }
	@else if $point == l   { @media (min-width: 79em)  { @content; } }
	@else if $point == ml  { @media (min-width: 89em)  { @content; } }
	@else if $point == xl  { @media (min-width: 99em)  { @content; } }
	@else if $point == xxl { @media (min-width: 101em) { @content; } }
}

// Classic clearfix, best used on containers without other pseudo classes applied
@mixin cf {
  *zoom: 1;
  &:before, &:after { content: ' '; display: table; }
  &:after { clear: both; }
}

// Positioning
@mixin left  { float: left; }

@mixin right { float: right; }

@mixin inline {
  width: auto;
  display: inline-block;
  margin-left: 0;
  margin-right: $space-s - 0.1875rem;
  @include bp(ml) { margin-right: $space-m - 0.1875rem; }
}

@mixin spacer {
  padding: $space-s;
  @include bp(ml) { padding: $space-m; }
}

@mixin oomph {
  margin-top: $space-s;
  @include bp(ml) { margin-top: $space-m; }
}

// TYPOGRAPHY

@mixin type($px,$lh: 1.5) {
  font-size: ($px/16)+rem;
  line-height: ($lh*24)/($px);
}

@mixin type-xs {
	@include type($type-xs,1);
	@include bp(xs) { @include type($type-xs,0.75); }
	@include bp(xl) { @include type($type-s,1); }
}
@mixin type-s {
	@include type($type-s,1);
	@include bp(xs) { @include type($type-xs,1); }
	@include bp(xl) { @include type($type-m); }
}
@mixin type-m	 {
  @include type($type-m);
  @include bp(xs) { @include type($type-s,1); }
  @include bp(xl) { @include type($type-ml); }
}
@mixin type-ml	 {
  @include type($type-ml);
  @include bp(xs) { @include type($type-m,1); }
  @include bp(xl) { @include type($type-l); }
}
@mixin type-l {
	@include type($type-l);
	@include bp(xs) { @include type-ml; }
	@include bp(xl) { @include type($type-xl); }
}
@mixin type-xl {
	@include type($type-xl);
	@include bp(xs) { @include type($type-l,1); }
	@include bp(xl) { @include type($type-xxl); }
}
@mixin type-xxl {
	@include type($type-xxl);
	@include bp(xs) { @include type-xl; }
	@include bp(xl) { @include type($type-xxxl,2); }
}
	
@mixin type-sans { font-family: $type-sans; }

@mixin type-serif { font-family: $type-serif; }

@mixin type-mono { font-family: $type-mono; }

@mixin type-bold { font-weight: bold; }

@mixin type-italic { font-style: italic; }

@mixin type-caps { text-transform: uppercase; letter-spacing: 0.0625rem; }

@mixin type-center { text-align: center; }

@mixin type-left { text-align: left; }

@mixin type-right { text-align: right; }

@mixin type-code-inline {
  @include type-mono;
  padding: 0.125rem 0.25rem;
  background-color: $color-base-dark;
  color: $color-bg;
  border-radius: $space-xs/2;
  font-size: 87.5%;
}

@mixin type-code-block {
  @include type-xs;
  display: block;
  padding: $space-s;
  overflow: auto;
  white-space: pre-wrap;
  word-wrap: break-word;
  border-radius: $space-xs;
}

@mixin type-legible {
  @include bp(m)  { max-width: 75%; margin-left: auto; margin-right: auto; }
  @include bp(xl) { max-width: 62.5%; }
}

// Opentype Goodness
@mixin ot-ligatures {
  font-variant-ligatures: common-ligatures;
     -moz-font-feature-settings: "liga", "clig";
      -ms-font-feature-settings: "liga", "clig";
  -webkit-font-feature-settings: "liga", "clig";
          font-feature-settings: "liga", "clig";
}
@mixin ot-numbers-old {
  font-variant-numeric: oldstyle-nums;
     -moz-font-feature-settings: "onum";
      -ms-font-feature-settings: "onum";
  -webkit-font-feature-settings: "onum";
          font-feature-settings: "onum";
}
@mixin ot-all-small {
  font-variant-caps: all-small-caps;
     -moz-font-feature-settings: "c2sc", "smcp";
      -ms-font-feature-settings: "c2sc", "smcp";
  -webkit-font-feature-settings: "c2sc", "smcp";
          font-feature-settings: "c2sc", "smcp";
}

// TIMING FUNCTIONS

@mixin smooth      { transition: all 0.375s ease-in; }

@mixin smooth-fast { transition: all 0.1875s ease-in; }

@mixin smooth-pop  { transition: all 0.375s cubic-bezier(0.6, 0.2, 0.4, 1.2); }

// LINK STYLES

@mixin link {
  color: inherit;
  border-color: inherit;
  @include smooth;
  &:hover { border-bottom: $border; border-color: inherit; }
}

@mixin link-text {
  color: $color-highlight;
  @include smooth-fast;
  &:hover { color: $color-highlight-dark; border-color: $color-highlight-ish; }
}

// FORM ELEMENTS

@mixin form-field {
  @include type-m;
  padding: $space-xs $space-s;
  background: $color-bg;
  color: $color-base;
  background-color: $color-bg;
  border: $border $color-base-light;
  border-radius: $space-xs;
  @include smooth;
  &::-webkit-input-placeholder { color: $color-base-mid; }
  &:hover { border-color: $color-base-mid; }
  &:focus {
    border-color: $color-base-ish;
    &::-webkit-input-placeholder { color: $color-base-ish; }
  }
}

@mixin form-check {
  position: absolute;
  opacity: 0;
  z-index: -1;
  + * { @include type-m; }
  + *:before {
    content: '';
    border: $border $color-highlight;
    width: $space-m - $space-xs;
    height: $space-m - $space-xs;
    display: inline-block;
    @include smooth;
    margin-right: $space-s - 0.1875rem;
    position: relative;
    top: 0.0625rem;
    @include bp(xs) { top: 0.1875rem; }
  }
  &:checked ~ *:before { background-color: $color-highlight-dark; }
}

// BUTTON STYLES

@mixin btn {
  @include type-sans;
  @include type-m;
  padding: $space-xs $space-s;
  @include inline;
  @include smooth;
  border-radius: $space-xs;
  @include bp(ml) { padding: $space-s $space-m; border-radius: $space-s; }
}

@mixin btn-main {
  background-color: $color-highlight;
  color: $color-bg;
  border: $border $color-highlight;
  &:hover { background-color: $color-highlight-ish; }
}

@mixin btn-secondary {
  background-color: $color-bg;
  color: $color-base;
  border: $border $color-base-light;
  &:hover { background-color: $color-base-ghost; }
}

// ABSOLUTE POSITIONING HELPERS

@mixin fill {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  height: 100%;
}

@mixin center-vertical {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}